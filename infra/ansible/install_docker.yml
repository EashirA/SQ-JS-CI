- name: Install and configure Docker
  hosts: all
  become: true
  tasks:
    - name: Update & upgrade apt cache
      apt:
        update_cache: true
        upgrade: yes

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present

    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0644
    - name: Get system architecture
      set_fact:
        system_architecture: "{{ lookup('pipe', 'dpkg --print-architecture') }}"
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ system_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: true
    - name: Update apt cache
      apt:
        update_cache: true
        # cache_valid_time: 86400

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ item }}"
        shell: /bin/bash
        groups: docker
        append: true
      loop:
        - ubuntu
      register: add_to_docker_group_result

    - name: Get latest Docker Compose release version
      uri:
        url: https://api.github.com/repos/docker/compose/releases/latest
        return_content: true
      register: latest_release

    - name: Extract version number
      set_fact:
        version: "{{ (latest_release.content | from_json).tag_name }}"

    - name: Print version number
      debug:
        msg: "Latest Docker Compose version: {{ version }}"

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ version }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}
        dest: /usr/local/bin/docker-compose
        mode: 0755
    
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true

    - name: Reset ssh connection to allow user changes to affect ansible user
      ansible.builtin.meta:
        reset_connection

    - name: Install nginx and other packages
      apt:
        name:
          - nginx
          - git
          - certbot
          - apache2-utils
          - python3-certbot-nginx
        state: latest
        update_cache: true

    - name: Start nginx
      service:
        name: nginx
        enabled: true
        state: started

    # Sonarqube Docker Compose Setup
    - name: Create sonarqube directory
      file:
        path: /opt/sonarqube
        state: directory
        mode: '0755'

    - name: Copy docker-compose.yml to remote server
      copy:
        src: docker-compose.yaml
        dest: /opt/sonarqube/docker-compose.yaml
        mode: '0644'

    - name: Run docker-compose up
      community.docker.docker_compose_v2:
        project_src: /opt/sonarqube
        state: present
        pull: missing